---
- name: Get Service Account Signer Key
  community.kubernetes.k8s:
    api_version: v1
    kind: ConfigMap
    name: bound-sa-token-signing-certs
    namespace: openshift-kube-apiserver
  register: sa_signer_cm_out

- name: Save Signer Public Key
  copy:
    dest: "{{ pkcs_key_file }}"
    content: "{{ sa_signer_cm_out.result.data['service-account-001.pub'] }}"
  when: sa_signer_cm_out and  sa_signer_cm_out.result

- name: Generate keys.json
  shell: |
   ./bin/self-hosted-linux -key {{ pkcs_key_file }} \
     | jq '.keys += [.keys[0]] | .keys[1].kid = ""' > "keys.json"
  register: keys_out

- name: Generate openid-configuration
  template:
    dest: openid-configuration
    src:  openid-configuration
  when: keys_out.rc == 0

- name: "Create OIDC Bucket::{{ oidc_bucket_name }}"
  aws_s3:
    bucket: "{{ oidc_bucket_name }}"
    region: "{{ aws_region }}"
    mode: create

- name: "Upload OIDC Assets to Bucket::{{ oidc_bucket_name }}"
  aws_s3:
    bucket: "{{ oidc_bucket_name }}"
    region: "{{ aws_region }}"
    object: "{{ item.object }}"
    src: "{{ item.src }}"
    permission: "public-read"
    mode: put
  with_items:
    - {src: "openid-configuration",object: ".well-known/openid-configuration"}
    - {src: "keys.json",object: "keys.json"}

- name: Verify OIDC Public Assets
  uri:
    url: "https://s3.{{ aws_region }}.amazonaws.com/{{ oidc_bucket_name }}/{{ item }}"
  with_items:
    - 'keys.json'
    - '.well-known/openid-configuration'
